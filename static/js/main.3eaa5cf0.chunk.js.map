{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","optionBtnList","map","option","optionItem","optionBtn","type","onClick","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","statisticList","statisticItem","Notification","message","notification","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","evt","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,cAAgB,oC,uNCGrE,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,K,qCCLQ,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,oBAAIL,UAAWC,IAAEK,cAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,oBAAIR,UAAWC,IAAEQ,WAAjB,SACE,wBACET,UAAWC,IAAES,UACbC,KAAK,SACLC,QAAS,kBAAMP,EAAgBG,IAHjC,SAKGA,KAN6BK,IAAQC,iB,oBCHnC,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIpB,UAAWC,IAAEoB,cAAjB,UACE,oBAAIrB,UAAWC,IAAEqB,cAAjB,SACE,0CAAaN,OAEf,oBAAIhB,UAAWC,IAAEqB,cAAjB,SACE,6CAAgBL,OAElB,oBAAIjB,UAAWC,IAAEqB,cAAjB,SACE,yCAAYJ,OAEd,oBAAIlB,UAAWC,IAAEqB,cAAjB,SACE,2CAAcH,OAEhB,oBAAInB,UAAWC,IAAEqB,cAAjB,SACE,iCACG,IADH,qBAEqB,IAClBF,EAAqB,GAAKJ,EAAOI,EAHpC,Y,qBCxBO,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,mCACE,oBAAIxB,UAAWC,IAAEwB,aAAjB,SAAgCD,M,ICiEvBE,E,4MA5DbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EASNU,mBAAqB,WACpB,OAAO,EAAKD,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAG3DW,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKJ,MAAMX,KAAQ,EAAKY,qBAAwB,M,EAIrEvB,gBAAkB,SAAC2B,GAEjB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAME,EAAUF,GAAO,O,4CAK5B,WACE,OACE,qCACE,cAACnC,EAAD,CAASC,MAAO,wBAAhB,SACE,cAACK,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAkB8B,KAAK9B,oBAI3B,cAACR,EAAD,CAASC,MAAM,aAAf,SACiC,IAA9BqC,KAAKP,qBACJ,cAACL,EAAD,CAAcC,QAAS,sBAEvB,cAACT,EAAD,CACEC,KAAMmB,KAAKR,MAAMX,KACjBC,QAASkB,KAAKR,MAAMV,QACpBC,IAAKiB,KAAKR,MAAMT,IAChBC,MAAOgB,KAAKP,qBACZR,mBAAoBe,KAAKN,6C,GAjDrBO,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B9C,EAAOC,QAAU,CAAC,UAAY,mCAAmC,cAAgB,yC,kBCAjFD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.3eaa5cf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__l7sv0\",\"statisticItem\":\"Statistics_statisticItem__mFFtp\"};","import PropTypes from 'prop-types';\r\n\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import shortid from 'shortid';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <ul className={s.optionBtnList}>\r\n      {options.map(option => (\r\n        <li className={s.optionItem} key={shortid.generate()}>\r\n          <button\r\n            className={s.optionBtn}\r\n            type=\"button\"\r\n            onClick={() => onLeaveFeedback(option)}\r\n          >\r\n            {option}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <li className={s.statisticItem}>\r\n        <span>Good: {good}</span>\r\n      </li>\r\n      <li className={s.statisticItem}>\r\n        <span>Neutral: {neutral}</span>\r\n      </li>\r\n      <li className={s.statisticItem}>\r\n        <span>Bad: {bad}</span>\r\n      </li>\r\n      <li className={s.statisticItem}>\r\n        <span>Total: {total}</span>\r\n      </li>\r\n      <li className={s.statisticItem}>\r\n        <span>\r\n          {' '}\r\n          Positive Feedback:{' '}\r\n          {positivePercentage > 50 ? good : positivePercentage}%\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <h2 className={s.notification}>{message}</h2>\r\n    </>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport './App.css';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }\n\n   countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n   };\n  \n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good  / this.countTotalFeedback()) * 100);\n  };\n\n\n  onLeaveFeedback = (evt) => {\n    \n    this.setState(prevState => ({\n      [evt]: prevState[evt] + 1,\n    }));\n  };\n\n\n  render() {\n    return (\n      <>\n        <Section title= \"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={ this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message={'No feedback given'} />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    )\n  }\n\n  \n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionBtn\":\"FeedbackOptions_optionBtn__15JS5\",\"optionBtnList\":\"FeedbackOptions_optionBtnList__Jf9Wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1dKdg\"};"],"sourceRoot":""}